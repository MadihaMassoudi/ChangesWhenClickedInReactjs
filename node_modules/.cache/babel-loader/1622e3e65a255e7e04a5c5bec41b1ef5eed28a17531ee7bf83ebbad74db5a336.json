{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-tut\\\\react-apps\\\\src\\\\App.jsx\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  let newTime = new Date().toLocaleTimeString();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: newTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = App;\nexport default App;\n\n// Get Time\n// import React, { useState } from 'react';\n\n// const App = () =>{\n\n//   let newTime = new Date().toLocaleTimeString();  \n\n//   const [cTime, setCTime] = useState(newTime);\n\n//   const UpdatedTime = () =>{\n//     newTime = new Date().toLocaleTimeString(); \n//     setCTime(newTime);\n//   }\n//   return(\n//     <>\n//       <div>\n//         <h1> {cTime} </h1>\n//         <button onClick={UpdatedTime}> Get Time </button>\n//       </div>\n//     </>\n//   )\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","newTime","Date","toLocaleTimeString","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react-tut/react-apps/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst App = () =>{\r\n\r\n  let newTime = new Date().toLocaleTimeString();\r\n  \r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>{newTime}</h1>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Get Time\r\n// import React, { useState } from 'react';\r\n\r\n// const App = () =>{\r\n\r\n//   let newTime = new Date().toLocaleTimeString();  \r\n\r\n//   const [cTime, setCTime] = useState(newTime);\r\n\r\n//   const UpdatedTime = () =>{\r\n//     newTime = new Date().toLocaleTimeString(); \r\n//     setCTime(newTime);\r\n//   }\r\n//   return(\r\n//     <>\r\n//       <div>\r\n//         <h1> {cTime} </h1>\r\n//         <button onClick={UpdatedTime}> Get Time </button>\r\n//       </div>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAK;EAEf,IAAIC,OAAO,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;EAE7C,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAAO,QAAA,EAAKH;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC,gBACN,CAAC;AAEP,CAAC;AAAAC,EAAA,GAXKT,GAAG;AAaT,eAAeA,GAAG;;AAclB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}